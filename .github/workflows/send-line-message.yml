name: LINE Water Check Notification

on:
  schedule:
    - cron: '0 0 * * *'    # JST 9:00
    - cron: '0 8 * * *'    # JST 17:00
  workflow_dispatch:

jobs:
  notify-if-no-water:
    runs-on: ubuntu-latest
    steps:
      - name: Check Firestore and notify LINE
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_GROUP_ID: ${{ secrets.LINE_GROUP_ID }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > service-account.json

          FIREBASE_CLIENT_EMAIL=$(jq -r '.client_email' service-account.json)
          FIREBASE_PRIVATE_KEY=$(jq -r '.private_key' service-account.json)

          HEADER='{
            "alg": "RS256",
            "typ": "JWT"
          }'

          NOW=$(date +%s)
          EXP=$(($NOW + 3600))

          CLAIM='{
            "iss": "'"$FIREBASE_CLIENT_EMAIL"'",
            "sub": "'"$FIREBASE_CLIENT_EMAIL"'",
            "aud": "https://oauth2.googleapis.com/token",
            "iat": '"$NOW"',
            "exp": '"$EXP"',
            "scope": "https://www.googleapis.com/auth/datastore"
          }'

          b64enc() { openssl base64 -e -A | tr '+/' '-_' | tr -d '='; }

          JWT_HEADER=$(echo -n "$HEADER" | b64enc)
          JWT_CLAIM=$(echo -n "$CLAIM" | b64enc)
          JWT_UNSIGNED="$JWT_HEADER.$JWT_CLAIM"

          echo "$FIREBASE_PRIVATE_KEY" | sed 's/\\n/\n/g' > private_key.pem
          JWT_SIGNATURE=$(echo -n "$JWT_UNSIGNED" | openssl dgst -sha256 -sign private_key.pem | b64enc)
          JWT="$JWT_UNSIGNED.$JWT_SIGNATURE"

          ACCESS_TOKEN=$(curl -s -X POST https://oauth2.googleapis.com/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=$JWT" \
            | jq -r '.access_token')

          TODAY=$(date -u +"%Y-%m-%d" -d "+9 hours")
          echo 'JST_HOUR=$(date -u +"%H" -d "+9 hours")'
          JST_HOUR=17

          TIME_FIELD="time1"
          TIME_LABEL="ÂçàÂâç"
          CHECK_WEATHER=false

          if [ "$JST_HOUR" -eq 17 ]; then
            TIME_FIELD="time2"
            TIME_LABEL="ÂçàÂæå"
            CHECK_WEATHER=true
          fi

          FIRESTORE_URL="https://firestore.googleapis.com/v1/projects/$FIREBASE_PROJECT_ID/databases/(default)/documents/water-records/$TODAY"

          RESPONSE=$(curl -s -X GET "$FIRESTORE_URL" \
            -H "Authorization: Bearer $ACCESS_TOKEN")

          TIME_VALUE=$(echo "$RESPONSE" | jq -r ".fields.$TIME_FIELD.stringValue // empty")

          WEATHER_CONDITION_OK=false
          TEMP_AT_14=""
          WEATHER_CODE_AT_14=""

          if [ "$CHECK_WEATHER" = true ]; then
            echo "üå¶Ô∏è Â§ïÊñπ„ÉÅ„Çß„ÉÉ„ÇØÔºö14ÊôÇ„ÅÆÂ§©Ê∞ó„Å®Ê∞óÊ∏©„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô"

            WEATHER_RESPONSE=$(curl -s "https://archive-api.open-meteo.com/v1/archive?latitude=34.6264&longitude=135.6009&start_date=$TODAY&end_date=$TODAY&hourly=temperature_2m,weathercode&timezone=Asia%2FTokyo")
            TEMP_AT_14=$(echo "$WEATHER_RESPONSE" | jq '.hourly.temperature_2m[14]')
            WEATHER_CODE_AT_14=$(echo "$WEATHER_RESPONSE" | jq '.hourly.weathercode[14]')

            echo "üå°Ô∏è 14ÊôÇ„ÅÆÊ∞óÊ∏©: ${TEMP_AT_14}‚ÑÉ"
            echo "üå§Ô∏è 14ÊôÇ„ÅÆÂ§©Ê∞ó„Ç≥„Éº„Éâ: $WEATHER_CODE_AT_14"

            if [ "$TEMP_AT_14" != "null" ] && [ "$WEATHER_CODE_AT_14" -eq 0 ] && [ "$(printf "%.0f" "$TEMP_AT_14")" -ge 30 ]; then
              WEATHER_CONDITION_OK=true
            else
              WEATHER_CONDITION_OK=false
            fi
          fi

          if [ -n "$TIME_VALUE" ]; then
            echo "‚úÖ ${TIME_LABEL}„ÅÆÊ∞¥„ÇÑ„ÇäË®òÈå≤„ÅÇ„ÇäÔºà${TIME_FIELD}: $TIME_VALUEÔºâ"
          else
            if [ "$JST_HOUR" -eq 17 ] && [ "$WEATHER_CONDITION_OK" = false ]; then
              curl -X POST https://api.line.me/v2/bot/message/push \
                -H "Authorization: Bearer $LINE_CHANNEL_ACCESS_TOKEN" \
                -H "Content-Type: application/json" \
                -d '{
                  "to": "'"$LINE_GROUP_ID"'",
                  "messages": [
                    {
                      "type": "text",
                      "text": "‚úÖ Êú¨Êó•Ôºà'"$TODAY"'Ôºâ„ÅÆ14ÊôÇ„ÅØÊô¥„ÇåÔºà'"$TEMP_AT_14"'‚ÑÉÔºâ„ÅÆ„Åü„ÇÅ„ÄÅÊ∞¥„ÇÑ„Çä„ÅÆÂøÖË¶Å„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü‚òÄÔ∏è"
                    }
                  ]
                }'
            else
              curl -X POST https://api.line.me/v2/bot/message/push \
                -H "Authorization: Bearer $LINE_CHANNEL_ACCESS_TOKEN" \
                -H "Content-Type: application/json" \
                -d '{
                  "to": "'"$LINE_GROUP_ID"'",
                  "messages": [
                    {
                      "type": "text",
                      "text": "‚ö†Ô∏è Êú¨Êó•Ôºà'"$TODAY"'Ôºâ„ÅÆ'"$TIME_LABEL"'„ÅÆÊ∞¥„ÇÑ„Çä„ÅåÊú™Ë®òÈå≤„Åß„ÅôÔºÅÔºà14ÊôÇ„ÅØÊô¥„ÇåÔºÜ30‚ÑÉ‰ª•‰∏äÔºâ"
                    }
                  ]
                }'
            fi
          fi

          echo "‚úÖ Âá¶ÁêÜÂÆå‰∫Ü"
